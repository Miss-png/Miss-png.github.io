{"version":3,"sources":["./src/app/memes/meme/meme.component.ts","./src/app/memes/meme/meme.component.html","./src/environments/environment.ts","./src/app/shared/meme.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/memes/memes.component.ts","./src/app/memes/memes.component.html","./src/app/app-routing.module.ts","./src/app/memes/memelist/memelist.component.ts","./src/app/memes/memelist/memelist.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AngularFireStorage } from '@angular/fire/storage';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport {MemeService} from 'src/app/shared/meme.service';\nimport {finalize} from \"rxjs/operators\";\n\n\n@Component({\n  selector: 'app-meme',\n  templateUrl: './meme.component.html',\n  styleUrls: []\n})\nexport class MemeComponent implements OnInit {\n\n  imgSrc?: string;\nselectedImage: any = null;\n  isSubmitted?: boolean;\n\n  formTemplate = new FormGroup ({\n  caption : new FormControl ('' ,Validators.required),\n  category: new FormControl(''),\n  imageUrl: new FormControl('', Validators.required),\n\n\n  })\n \n  constructor(private storage:AngularFireStorage, private service: MemeService) { }\n\n  ngOnInit() {\n    this.resetForm();\n  }\n\n  \nshowPreview(event:any){\n  if(event.target.files && event.target.files[0]){\n    const reader = new FileReader();\n    reader.onload = (e:any)  => this.imgSrc = e.target.result;\n    reader.readAsDataURL(event.target.files[0]);\nthis.selectedImage= event.target.files[0];\n\n  }\n  else{\n    this.imgSrc = '/assets/img/default.jpeg';\n    this.selectedImage = null;\n\n  }\n}\n    onSubmit(formValue){ \nthis.isSubmitted= true;\nif(this.formTemplate.valid){\n  var filePath =  `${formValue.category}}/${this.selectedImage.name.split('.').slice(0,-1).join('.')}_${new Date().getTime()}`;\n  const fileRef =this.storage.ref(filePath);\n  this.storage.upload(filePath, this.selectedImage).snapshotChanges().pipe(\n    finalize(()=> {\n      fileRef.getDownloadURL().subscribe((url)=>{\n      formValue['imageUrl'] =url;\n      this.service.insertImageDetails(formValue);\n      this.resetForm(); \n    })\n    })\n).subscribe();\n}\n}\nget formControls(){\n  return this.formTemplate['controls'];\n}\n      resetForm(){\n  this.formTemplate.reset();\n  this.formTemplate.setValue({\n    caption:'',\n    imageUrl:'',\n    category: 'Vacation',\n  });\n  this.imgSrc = './assets/img/default.jpeg';\n  this.selectedImage=null;\n  this.isSubmitted= false;\n      }\n    \n\n  }\n\n","\n\n<div class=\"card\" style =\" width:25rem \">\n    <div class=\"car-body\">\n    <form [formGroup]= \"formTemplate\" (submit)= \"onSubmit(formTemplate.value)\">\n        <div class=\"text-center\">\n            <img [src] =\"imgSrc\" width= \"350px\" height= \"250px\" (click) =\"fileUploader.click()\">\n    </div>\n        <div class =\"form-group\">\n            <label>Select file to upload</label>\n            <input type=\"file\" accept= \"image/*\" class=\"form-control\" #fileUploader formControlName=\"imageUrl\" (change)= \"showPreview($event)\" >\n            <div class=\"text-danger\" *ngIf =\"isSubmitted && formControls.imageUrl.errors?.required\"> This field is required</div>\n        </div>\n        <div class=\"form-group\">\n            <input class=\"form-control\" formControlName=\"caption\" placeholder=\"Caption\">\n            <div class=\"text-danger\" *ngIf =\"isSubmitted && formControls.caption.errors?.required\"> This field is required</div>\n        </div>\n        <div class=\"form-group\">\n            <select  formControlName=\"category\" class= \"category\" >\n                <option value=\"Vacation\" selected >Vacation</option>\n                <option value=\"Siblings\">Siblings</option>\n                <option value=\"Parents\">Parents</option>\n                <option value=\"Relationship\">Relationship</option>\n                <option value=\"Movies\">Movies</option>\n                <option value=\"Friendship\">Friendship</option>\n                <option value=\"Inspirational\">Inspirational</option>\n                <option value=\"Sports\">Sports</option>\n                <option value=\"Birthday\">Birthday</option>\n            </select>\n        </div>\n        <div class = \"form-group\">\n            <div class=\"form-group col-md-6\">\n                <a routerLink =\"/meme/list\" class= \"btn-btn-primary btn-block float-right\">Go To Collection</a>\n            </div>\n                <div class=\"form-row col-md-6\">\n            <button type=\"submit\" class=\"btn btn-success btn-block float-right\" >Submit</button>\n        </div>\n        </div>\n    </form>\n    </div>\n    </div>\n","\n\nexport const environment = {\n  production: false,\n  firebaseConfig : {\n    apiKey: \"AIzaSyA5py48k5MFY31qove_0SiWHslTCHY12uo\",\n    authDomain: \"meem-188e1.firebaseapp.com\",\n    databaseURL: \"https://meem-188e1-default-rtdb.firebaseio.com\",\n    projectId: \"meem-188e1\",\n    storageBucket: \"meem-188e1.appspot.com\",\n    messagingSenderId: \"624911557406\",\n    appId: \"1:624911557406:web:f97351a7c83c1cbd601f0f\",\n    measurementId: \"G-JHVSFXSHEB\"\n  }\n\n};\n\n","import { Injectable } from '@angular/core';\n\nimport {AngularFireDatabase, AngularFireList} from '@angular/fire/database';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemeService {\n  imageDetailList!: AngularFireList<any>;\n\n  constructor(private firebase:AngularFireDatabase) { }\ngetImageDetailList(){\n  this.imageDetailList= this.firebase.list('imageDetails');\n}\ninsertImageDetails(imageDetails){\n  this.imageDetailList.push(imageDetails);\n}\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MEEM';\n}\n","<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport { MemesComponent } from './memes/memes.component';\nimport { MemeComponent } from './memes/meme/meme.component';\nimport { MemelistComponent } from './memes/memelist/memelist.component';\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFireStorageModule } from '@angular/fire/storage';\nimport {AngularFireDatabaseModule} from '@angular/fire/database';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\nimport {environment} from '../environments/environment';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport {CommonModule} from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    MemesComponent,\n    MemeComponent,\n    MemelistComponent,\n  \n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    AngularFirestoreModule,\n    NgbModule,\n    FormsModule,\n    MatButtonModule,\n    AngularFireDatabaseModule,\n    AngularFireStorageModule,\n    CommonModule,\n    \n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    \n\n   \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n \n  ngOnInit():void {} \n  \n}\n","<nav class=\"topnav\">\n    <mat-toolbar class=\"navbar\">\n        \n       <span class= \"logo\" >MEEM</span>\n    </mat-toolbar>\n    \n    </nav>\n    \n    \n","import { Component, OnInit } from '@angular/core';\nimport {MemeService} from '../shared/meme.service';\n\n@Component({\n  selector: 'app-memes',\n  templateUrl: './memes.component.html',\n  styleUrls: ['./memes.component.css']\n})\nexport class MemesComponent implements OnInit {\n\n  constructor(private service :MemeService) { }\n\n  ngOnInit() {\n    this.service.getImageDetailList();\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-8 offset-md-2\">\n      <blockquote class=\"blockquote\">\n        <p class=\"mb-0 h3 display-4\">MEEM</p>\n        <footer class=\"blockquote-footer\"> <cite title=\"Source Title\">Public library of Memes:Most Updated Memes</cite> <cite\n            title=\"Source Title\"></cite></footer>\n        </blockquote>\n        <p class=\"h7\">Meme pronounced MEEM: the art of producing imagery from ironics events and facial expressions.Click on Insert New Image to upload a MEEM!(Right click over a meme to download) </p>\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n  \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {MemeComponent} from './memes/meme/meme.component';\nimport { MemelistComponent } from './memes/memelist/memelist.component';\nimport { MemesComponent } from './memes/memes.component';\n\n\n\nconst routes: Routes = [\n\n  \n  {path:'' , redirectTo:'meme/list', pathMatch:'full'},\n  {path :'meme', component: MemesComponent ,\n  children: [\n    {path:'upload',component :MemeComponent},\n    {path:'list', component: MemelistComponent},\n    \n    \n    \n  ]\n   } ,\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  \n\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {MemeService} from 'src/app/shared/meme.service';\n\n\n@Component({\n  selector: 'app-memelist',\n  templateUrl: './memelist.component.html',\n  styleUrls: ['./memelist.component.css']\n})\nexport class MemelistComponent implements OnInit {\n \n\nmemeList ?: any[];\nrowIndexArray?: any[];\n  constructor(private service: MemeService) { }\n\n  ngOnInit() {\n    \n    this.service.imageDetailList.snapshotChanges().subscribe(\n      list => {\n        this.memeList= list.map(item=> {return item.payload.val();});\n        this.rowIndexArray=Array.from(Array(Math.ceil((this.memeList.length+1)/3)).keys());\n      \n      }\n    );\n  }\n\n}\n","<table *ngIf=\"memeList\">\n    <tr *ngFor=\"let i of rowIndexArray\">\n        <td>\n            <div class =\"imagebox\" *ngIf=\"i==0\"> \n                <a routerLink =\"/meme/upload\">\n                <img [src]=\"memeList[3*i].imageUrl\" class=\"tn\" width=\"300\" height=\"260\" >\n                <span class=\"imagebox-desc\" >Insert New Image</span></a>\n            </div> \n            <div class =\"imagebox\" *ngIf=\"i!=0\">\n                <img [src]=\"memeList[3*i-1].imageUrl\"  class=\"tn\" width=\"300\" height=\"260\"> \n                <span class=\"imagebox-desc\">{{memeList[3*i-1].category}} \" {{memeList[3*i-1].caption}} \" </span>\n                \n            </div> \n        </td>\n        <td *ngIf=\"memeList[3*i]\">\n            <div class =\"imagebox\"> \n                <img [src]=\"memeList[3*i].imageUrl\"  class=\"tn\"width=\"300\" height=\"260\"  >\n                <span class=\"imagebox-desc\">{{memeList[3*i].category}} \" {{memeList[3*i].caption}} \"  </span>\n               \n            </div> \n        </td>\n        <td *ngIf= \"memeList[3*i+1]\">\n            <div class =\"imagebox\"> \n                <img [src]=\"memeList[3*i+1].imageUrl\" class=\"tn\" width=\"300\" height=\"260\">\n                <span class=\"imagebox-desc\">{{memeList[3*i+1].category}} \" {{memeList[3*i+1].caption}} \" </span>\n               \n            </div> \n        </td>\n    </tr>\n</table>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}